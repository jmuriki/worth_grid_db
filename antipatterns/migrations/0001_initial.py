# Generated by Django 5.2 on 2025-05-15 07:30

import django.core.validators
import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('interfaces', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='AntiPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('subtitle', models.CharField(blank=True, max_length=100, verbose_name='Подзаголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Анти-паттерн',
                'verbose_name_plural': 'Анти-паттерны',
            },
        ),
        migrations.CreateModel(
            name='AntiPatternExample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='Описание Примера')),
                ('order_position', models.PositiveIntegerField(default=1, help_text='Чем меньше, тем выше Пример в Анти-паттерне.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Очередь Примера')),
                ('anti_pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examples', to='antipatterns.antipattern', verbose_name='Анти-паттерн')),
            ],
            options={
                'verbose_name': 'Пример',
                'verbose_name_plural': 'Примеры',
            },
        ),
        migrations.CreateModel(
            name='AntiPatternExampleStoryAcceptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_position', models.PositiveIntegerField(default=1, help_text='Чем меньше число — тем выше Пример в списке выдачи.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Очерёдность')),
                ('comment', models.CharField(blank=True, help_text='Как заметить причину поломки Акцептора?', max_length=200, verbose_name='Как заметить?')),
                ('anti_pattern_example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acceptor_links', to='antipatterns.antipatternexample', verbose_name='Пример Анти-паттерна')),
                ('story_acceptor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='example_links', to='interfaces.storyacceptor', verbose_name='Акцептор Истории')),
            ],
            options={
                'verbose_name': 'Связь «Пример Анти-паттерна - Акцептор»',
                'verbose_name_plural': 'Связи «Пример Анти-паттерна - Акцептор»',
            },
        ),
        migrations.AddField(
            model_name='antipatternexample',
            name='acceptors',
            field=models.ManyToManyField(blank=True, related_name='anti_pattern_examples', through='antipatterns.AntiPatternExampleStoryAcceptor', through_fields=('anti_pattern_example', 'story_acceptor'), to='interfaces.storyacceptor', verbose_name='Акцепторы'),
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anti_pattern_present', models.BooleanField(verbose_name='Наличие Анти-паттерна')),
                ('fix_status', models.CharField(choices=[('not_fixable', 'Неисправимо'), ('fix_required', 'Требует исправления'), ('fix_not_required', 'Не требует исправления')], max_length=20, verbose_name='Статус исправления')),
                ('lang_ident', models.CharField(blank=True, max_length=20, verbose_name='Идентификатор языка')),
                ('code', models.TextField(verbose_name='Код')),
                ('order_position', models.PositiveIntegerField(default=1, help_text='Чем меньше, тем выше Сниппет в Примере.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Очередь Спиппета')),
                ('example', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='snippets', to='antipatterns.antipatternexample', verbose_name='Пример')),
            ],
            options={
                'verbose_name': 'Сниппет',
                'verbose_name_plural': 'Сниппеты',
            },
        ),
    ]
